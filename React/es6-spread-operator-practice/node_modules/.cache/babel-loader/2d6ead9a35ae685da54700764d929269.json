{"ast":null,"code":"import _slicedToArray from \"/Users/kimminju/Desktop/Javascript/udemy-webdev-angela/React/es6-spread-operator-practice/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/kimminju/Desktop/Javascript/udemy-webdev-angela/React/es6-spread-operator-practice/src/components/ToDoItem.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nexport default Item;\n\nfunction Item(props) {\n  _s();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isClicked = _useState2[0],\n      setIsClicked = _useState2[1];\n\n  function handleClick() {\n    setIsClicked(!isClicked);\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    onclick: handleClick,\n    style: isclicked ? {\n      textDecoration: 'line-through'\n    } : {\n      textDecoration: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }\n  }, props.text);\n}\n\n_s(Item, \"+2jvnzgqyS4sm44z1s1whgWD4Tg=\");\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["/Users/kimminju/Desktop/Javascript/udemy-webdev-angela/React/es6-spread-operator-practice/src/components/ToDoItem.jsx"],"names":["React","useState","Item","props","isClicked","setIsClicked","handleClick","isclicked","textDecoration","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,eAAeC,IAAf;;AAEA,SAASA,IAAT,CAAeC,KAAf,EAAqB;AAAA;;AAEjB,kBAAkCF,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOG,SAAP;AAAA,MAAkBC,YAAlB;;AAEA,WAASC,WAAT,GAAsB;AAClBD,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACH;;AAED,sBAAO;AAAI,IAAA,OAAO,EAAEE,WAAb;AAA0B,IAAA,KAAK,EAAEC,SAAS,GAAE;AAACC,MAAAA,cAAc,EAAG;AAAlB,KAAF,GAAsC;AAACA,MAAAA,cAAc,EAAC;AAAhB,KAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0GL,KAAK,CAACM,IAAhH,CAAP;AAEH;;GAVQP,I;;KAAAA,I","sourcesContent":["import React, {useState} from \"react\";\nexport default Item;\n\nfunction Item (props){\n\n    const [isClicked, setIsClicked] = useState(false);\n\n    function handleClick(){\n        setIsClicked(!isClicked);\n    }\n\n    return <li onclick={handleClick} style={isclicked? {textDecoration : 'line-through'} : {textDecoration:'none'}}>{props.text}</li>\n\n}"]},"metadata":{},"sourceType":"module"}